{
	"info": {
		"_postman_id": "8180aca8-2bf6-4e8a-bf0c-068e79b54e05",
		"name": "User_API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.collectionVariables.set(\"token\",jsonData.token)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text",
						"disabled": true
					},
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"salmansrabon@gmail.com\",\r\n    \"password\":\"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "User List",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partner-key}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/user/list",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "User Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partner-key}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/user/search?email={{email}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"search"
					],
					"query": [
						{
							"key": "email",
							"value": "{{email}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var nid = _.random(10000000, 99999999)\r",
							"\r",
							"const reqObject = {\r",
							"    url: 'https://randomuser.me/api/',\r",
							"    method: 'GET',\r",
							"    header: 'Content-Type:application/json'\r",
							"};\r",
							"pm.sendRequest(reqObject, (err, res) =>{\r",
							"    let { results } = res.json()\r",
							"    let name = results[0].name.first + \" \" + results[0].name.last;\r",
							"    let email = results[0].email;\r",
							"    let phone_number = results[0].phone_number;\r",
							"    let address = results[0].location.city + \",\" + results[0].location.country;\r",
							"    pm.collectionVariables.set(\"name\", name)\r",
							"    pm.collectionVariables.set(\"email\", email)\r",
							"    pm.collectionVariables.set(\"phone_number\", phone_number)\r",
							"    pm.collectionVariables.set(\"address\", address)\r",
							"    pm.collectionVariables.set(\"nid\", nid)\r",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"Check if new user is created\" , function(){\r",
							"//     var jsonData = pm.response.json();\r",
							"//     pm.expect(jsonData.message).contains(\"User created successfully\");\r",
							"// });\r",
							"pm.test(\"Check if user already exist\", function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User already exists\")\r",
							"});\r",
							"pm.test(\"Status code is 208\", function(){\r",
							"    pm.response.to.have.status(208);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partner-key}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{name}}\",\r\n    \"email\":\"{{email}}\",\r\n    \"password\":\"{{12345678}}\",\r\n    \"phone_number\":\"{{phone_number}}\",\r\n    \"nid\":\"{{nid}}\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Random New User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var nid = _.random(10000000, 99999999)\r",
							"var randomid = _.random(10000, 99999);\r",
							"var phone_number = _.random(10000000000, 99999999999)\r",
							"var email = `john${randomid}@grr.la`\r",
							"pm.collectionVariables.set(\"nid\", nid)\r",
							"pm.collectionVariables.set(\"phone_number\", phone_number)\r",
							"pm.collectionVariables.set(\"email\", email);\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Check if new user is created\" , function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"User created successfully\");\r",
							"});\r",
							"pm.test(\"Status code is 201\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"// pm.test(\"Check if user already exist\", function(){\r",
							"//     var jsonData = pm.response.json();\r",
							"//     pm.expect(jsonData.message).to.contains(\"User already exists\")\r",
							"// });\r",
							"// pm.test(\"Status code is 208\", function(){\r",
							"//     pm.response.to.have.status(208);\r",
							"// });\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partner-key}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{$randomFirstName}} {{$randomLastName}}\",\r\n    \"email\":\"{{email}}\",\r\n    \"password\":\"12345678\",\r\n    \"phone_number\":\"{{$randomPhoneNumber}}\",\r\n    \"nid\":\"{{nid}}\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Duplicate User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"Check if new user is created\" , function(){\r",
							"//     var jsonData = pm.response.json();\r",
							"//     pm.expect(jsonData.message).contains(\"User created successfully\");\r",
							"// });\r",
							"pm.test(\"Check if user already exist\", function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User already exists\")\r",
							"});\r",
							"pm.test(\"Status code is 208\", function(){\r",
							"    pm.response.to.have.status(208);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partner-key}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Antony\",\r\n    \"email\":\"antony1@grr.la\",\r\n    \"password\":\"12345678\",\r\n    \"phone_number\":\"01738154474\",\r\n    \"nid\":\"7896587548\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"Check if new user is created\" , function(){\r",
							"//     var jsonData = pm.response.json();\r",
							"//     pm.expect(jsonData.message).contains(\"User created successfully\");\r",
							"// });\r",
							"pm.test(\"Check if User updated successfully\", function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User updated successfully\")\r",
							"});\r",
							"pm.test(\"Status code is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partner-key}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Jhonny\",\r\n    \"email\":\"jhonny@grr.la\",\r\n    \"password\":\"12345678\",\r\n    \"phone_number\":\"012547854\",\r\n    \"nid\":\"7896587548\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/update/254",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"update",
						"254"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User Partially",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.test(\"Check if new user is created\" , function(){\r",
							"//     var jsonData = pm.response.json();\r",
							"//     pm.expect(jsonData.message).contains(\"User created successfully\");\r",
							"// });\r",
							"pm.test(\"Check if User updated as jhonny bee successfully\", function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User updated successfully\")\r",
							"});\r",
							"pm.test(\"Status code is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partner-key}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Jhony bee\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/update/254",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"update",
						"254"
					]
				}
			},
			"response": []
		},
		{
			"name": "Save the Last User ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"let user = jsonData.users[jsonData.users.length-1]\r",
							"// let user = jsonData.users[jsonData.count-1]\r",
							"// let user = jsonData.users[_.random(1,jsonData.users.length-1)]\r",
							"console.log(user)\r",
							"pm.collectionVariables.set(\"id\",user.id)\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"let user_email = jsonData.users[jsonData.users.length-1]\r",
							"console.log(user_email)\r",
							"pm.collectionVariables.set(\"email\",user_email.email)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partner-key}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/user/list",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check if User deleted successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"User deleted\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{partner-key}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/delete/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"delete",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbG1hbnNyYWJvbkBnbWFpbC5jb20iLCJwYXNzd29yZCI6IjEyMzQiLCJpYXQiOjE2NDg5NzIxMjcsImV4cCI6MTY0ODk3MzkyN30.OemXR_sbtpOFvl86Pga3CHFNl_fLKSxaPi8-aHgbmWU",
			"type": "string"
		},
		{
			"key": "baseUrl",
			"value": "http://dmoney.professionaltrainingbd.com",
			"type": "string"
		},
		{
			"key": "partner-key",
			"value": "ROADTOSDET",
			"type": "string"
		},
		{
			"key": "name",
			"value": "Teuna Van Braam"
		},
		{
			"key": "email",
			"value": "john52291@grr.la"
		},
		{
			"key": "phone_number",
			"value": 59351131869
		},
		{
			"key": "address",
			"value": "Hoofddorp,Netherlands"
		},
		{
			"key": "nid",
			"value": 51101003
		},
		{
			"key": "id",
			"value": 1487
		}
	]
}